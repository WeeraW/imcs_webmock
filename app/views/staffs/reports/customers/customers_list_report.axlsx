workbook = xlsx_package.workbook
# define sheet style
heading_1 = workbook.styles.add_style(sz: 18, b: true, alignment: { horizontal: :center })
table_heading = workbook.styles.add_style(sz: 14, b: true, alignment: { horizontal: :center })
row_element = workbook.styles.add_style(sz: 14)

@orders.in_batches.each_with_index do |orders_batch, batch_index|
  workbook.add_worksheet(name: "รายการที่อยู่ลูกค้า #{batch_index}") do |sheet|
    sheet.add_row ['รายชื่อลูกค้าทั้งหมด'], style: [heading_1], widths: 5
    sheet.merge_cells 'A1:G1'
    sheet.add_row [
      '#', # Column A
      'ชื่อ-นามสกุล', # Column B
      'วันที่ซื้อ', # Column C
      'ที่อยู่แบบเต็ม', # Column D
      'เบอร์โทรศัพท์', # Column E
      'สินค้าที่ซื้อ', # Column F
      'จำนวน' # Column G
    ], style: [
      table_heading,
      table_heading,
      table_heading,
      table_heading,
      table_heading,
      table_heading,
      table_heading
    ]

    orders_batch.each_with_index do |order, index|
      sheet.add_row [
        order.id, # Column A
        order.shipping_address.recipient_name, # Column B
        order.created_at.in_time_zone('Bangkok').strftime('%d/%m/%Y %H:%m'), # Column C
        full_address(order.shipping_address), # Column D
        order.shipping_address.recipient_telephone_number, # Column E
        # order_details
        order.order_details.first.product.name_th, # Column F
        order.order_details.first.quantity # Column G
      ], style: row_element, types: [nil, nil, :string, nil, :string, nil, nil]
      next if order.order_details.second.nil?
      order.order_details[-2, order.order_details.count - 1].map do |order_detail|
        sheet.add_row [
          nil,
          nil,
          nil,
          nil,
          nil,
          order_detail.product.name_th,
          order_detail.quantity
        ], style: row_element, types: [nil, nil, :string, nil, :string, nil, nil]
      end
    end
    sheet.column_widths(10, 40, 30, 100, 20, 20, 20)
  end
end
